import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from io import BytesIO
import numpy as np

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–π —Å–µ—Å—Å–∏–∏
if "df" not in st.session_state:
    st.session_state.df = None
if "dates_added" not in st.session_state:
    st.session_state.dates_added = False
if "analysis_total_tip" not in st.session_state:
    st.session_state.analysis_total_tip = False
if "sum_on_week" not in st.session_state:
    st.session_state.sum_on_week = False
if "graph1" not in st.session_state:
    st.session_state.graph1 = None
if "graph2" not in st.session_state:
    st.session_state.graph2 = None
if "graph3" not in st.session_state:
    st.session_state.graph3 = None


st.title("–†–∞–±–æ—Ç–∞ —Å csv")

# –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞ —á–µ—Ä–µ–∑ —Å–∞–π–¥–±–∞—Ä
with st.sidebar:
    st.write("–ó–∞–≥—Ä—É–∑–∏—Ç–µ csv —Ñ–∞–π–ª")
    fl = st.file_uploader("–†–∞–∑–¥–µ–ª –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞", type="csv")
    
    if fl and st.session_state.df is None:
        st.session_state.df = pd.read_csv(fl)
        st.session_state.dates_added = False
        st.session_state.analysis_done = False
        st.rerun()


if st.session_state.df is None:
    st.info("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∑–∏—Ç–µ CSV —Ñ–∞–π–ª")
    st.stop()


st.write("–ü–µ—Ä–≤—ã–µ 5 —Å—Ç—Ä–æ–∫ –¥–∞–Ω–Ω—ã—Ö:")
st.write(st.session_state.df.head())


if not st.session_state.dates_added:
    st.write("—Ö–º–º...üí¨ –ß–µ–≥–æ-—Ç–æ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç. –î–∞–≤–∞–π –∑–∞–ø–æ–ª–Ω–∏–º –Ω–æ–≤—ã–π —Å—Ç–æ–ª–±–µ—Ü —Å –¥–∞—Ç–∞–º–∏")
    if st.button("–ó–∞–ø–æ–ª–Ω–∏—Ç—å"):
        date = pd.date_range(start="2023-01-01", end="2023-01-31", freq="D")
        rr_d = np.random.choice(date, size=len(st.session_state.df), replace=True)
        st.session_state.df["date_time"] = pd.to_datetime(rr_d).date
        st.session_state.dates_added = True
        st.success("–°—Ç–æ–ª–±–µ—Ü —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!")
        st.rerun()
    st.stop()


if st.session_state.dates_added and not st.session_state.graph1:
    st.subheader("–ü—Ä–æ–≤–µ–¥–µ–º –∞–Ω–∞–ª–∏–∑ —á–∞–µ–≤—ã—Ö –ø–æ –¥–∞—Ç–µ")
    
    tb = st.session_state.df.groupby("date_time", as_index=False)['tip'].sum()
        
    fig, ax = plt.subplots(figsize=(10, 6))
    sns.scatterplot(data=tb, x="tip", y="date_time", hue="date_time", palette="viridis", ax=ax)
    ax.set_xlabel("–°—É–º–º–∞ —á–∞–µ–≤—ã—Ö")
    ax.set_ylabel("–î–∞—Ç–∞")
    ax.set_title("–ê–Ω–∞–ª–∏–∑ —á–∞–µ–≤—ã—Ö –ø–æ –¥–∞—Ç–µ")
    plt.legend(loc="upper right",ncol=1,fontsize="x-small",bbox_to_anchor=(1.2,1))
    plt.xticks(rotation=45)
    plt.tight_layout()
        
    save = BytesIO()
    fig.savefig(save, format="png")
    save.seek(0)
    st.session_state.graph1 = save
        
    st.pyplot(fig)

if st.session_state.graph1:
    st.download_button(
        "–°–∫–∞—á–∞—Ç—å –≥—Ä–∞—Ñ–∏–∫ —á–∞–µ–≤—ã—Ö –ø–æ –¥–∞—Ç–µ",
        data=st.session_state.graph1,
        file_name="date_tip.png",
        mime="image/png"
    )



if st.session_state.dates_added and not st.session_state.analysis_total_tip:
    st.subheader("–ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ. –ê —Å—É–º–º–∞ —Å—á–µ—Ç–∞ –∫–∞–∫-—Ç–æ —Å–≤—è–∑–∞–Ω–∞ —Å –∫–æ–ª-–≤–æ–º —á–∞–µ–≤—ã—Ö?")
    if st.button('–ü—Ä–æ–≤–µ—Ä–∏—Ç—å'):
        ttlbl_and_tip = st.session_state.df.groupby("date_time", as_index=False)[["total_bill","tip"]].sum()
        ttlbl_and_tip = ttlbl_and_tip.round({"total_bill":2, "tip":2})

        fig1, ax1 = plt.subplots(figsize=(10, 6))
        sns.scatterplot(data=ttlbl_and_tip, x="total_bill", y="tip", hue="tip", palette="viridis", ax=ax1)
        ax1.set_xlabel("–°—É–º–º–∞ —Å—á–µ—Ç–∞")
        ax1.set_ylabel("–ß–∞–µ–≤—ã–µ")
        ax1.set_title("–í–∑–∞–∏–º–æ—Å–≤—è–∑—å —Å—É–º–º—ã —Å—á–µ—Ç–∞ –∏ —á–∞–µ–≤—ã—Ö")# –ö–Ω–æ–ø–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –≤—Ç–æ—Ä–æ–≥–æ –≥—Ä–∞—Ñ–∏–∫–∞
        plt.xticks(rotation=45)
        plt.tight_layout()
        
        save1 = BytesIO()
        fig1.savefig(save1, format="png")
        save1.seek(0)
        st.session_state.graph2 = save1
        st.session_state.analysis_total_tip = True
            
        st.pyplot(fig1)


if st.session_state.graph2:
    st.download_button("–°–∫–∞—á–∞—Ç—å –≥—Ä–∞—Ñ–∏–∫ —Å–≤—è–∑–∏ —Å—á–µ—Ç–∞ –∏ —á–∞–µ–≤—ã—Ö", st.session_state.graph2,file_name="date1_tip.png",
        mime="image/png")
    st.write("–í–∏–¥–Ω–æ, —á—Ç–æ –æ—Ç —Å—É–º–º—ã —Å—á–µ—Ç–∞ –∑–∞–≤–∏—Å–∏—Ç –∫–æ–ª–∏–µ—á—Å—Ç–≤–æ –æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö —á–∞–µ–≤—ã—Ö")
    

if st.session_state.analysis_total_tip and not st.session_state.sum_on_week:
    st.header("–¢–µ–ø–µ—Ä—å –¥–∞–≤–∞–π—Ç–µ –ø—Ä–æ–≤–µ—Ä–∏–º —Å—É–º–º—É —á–µ–∫–æ–≤ –Ω–∞ –∫–∞–∂–¥—ã–π –∏–∑ –¥–Ω–µ–π –Ω–µ–¥–µ–ª–∏")
    if st.button('–†–µ–∑—É–ª—å—Ç–∞—Ç'):
        df_week = st.session_state.df.copy()
        df_week['date_time'] = pd.to_datetime(df_week['date_time']) 
            
        days_translation = {'Monday': '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫','Tuesday': '–í—Ç–æ—Ä–Ω–∏–∫','Wednesday': '–°—Ä–µ–¥–∞','Thursday': '–ß–µ—Ç–≤–µ—Ä–≥','Friday': '–ü—è—Ç–Ω–∏—Ü–∞',
                            'Saturday': '–°—É–±–±–æ—Ç–∞','Sunday': '–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ'}
            
        df_week['day_of_week'] = df_week['date_time'].dt.day_name().map(days_translation)
        weekly_bills = df_week.groupby('day_of_week', as_index=True)['total_bill'].sum()
            
        fig2, ax2 = plt.subplots(figsize=(12, 6))
        weekly_bills.plot(kind='bar', color="blue", ax=ax2)
            
        ax2.set_title("–°—É–º–º–∞ —Å—á–µ—Ç–æ–≤ –ø–æ –¥–Ω—è–º –Ω–µ–¥–µ–ª–∏", fontsize=16)
        ax2.set_xlabel("–î–µ–Ω—å –Ω–µ–¥–µ–ª–∏")
        ax2.set_ylabel("–°—É–º–º–∞ –∑–∞ –¥–µ–Ω—å")
        plt.xticks(rotation=45)
        plt.tight_layout()

        save2 = BytesIO()
        fig2.savefig(save2, format="png", bbox_inches='tight', dpi=150)
        save2.seek(0)
        
        st.session_state.graph2 = save2
        st.session_state.sum_on_week = True
        st.pyplot(fig2)
        
        st.download_button("–°–∫–∞—á–∞—Ç—å –≥—Ä–∞—Ñ–∏–∫ –ø–æ –¥–Ω—è–º –Ω–µ–¥–µ–ª–∏",data=save2,file_name="weekly_sum.png",mime="image/png")
